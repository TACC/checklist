#!/bin/bash

# @TACC searches tacc_filter_options for blocked $USER.
# If found exit with failure (exit 1), and message if it exists.
# See example of blocked_user line and message (at end).
# non-TACC sites need to interact with their ACL mechanism.
# Based on Sanitytool's sanitycheck. Written and revised. 
#                                   2025-08-01 Kent Milfeld

##TODO Search for message within range of queue_acls/public

  [[ $# == 0 ]] && O=N    #Command line options T=terse,v=Verbose, default Normal
  [[ $1 =~ t ]] && O=T 
  [[ $1 =~ v ]] && O=V 
  [[ ! "$O" =~ [NTV] ]] && echo "USAGE: $0 [-t|-v] # terse|verbose output"

STATUS=0

  HPC_OSs=(rocky centos fedora ubuntu debian)
  if [[ -f /etc/os-release ]]; then
    output=$( grep ^ID= /etc/os-release ) #e.g. ID="rocky"
    eval $output
    OS=$ID
    if [[ ! ${HPC_OSs[@]} =~ $OS ]]; then
       echo " internal ERROR: could not get OS from /etc/os-release"
       echo "   search list ( ${HPC_OSs[@]} )"
       exit 1
    fi
  else
    [[ `uname -a` =~ Darwin ]] && OS=darwin
  fi

  [[ $OS == darwin ]]          && opts='-s'
  [[ ${HPC_OSs[@]} =~ $OS   ]] && opts='-A'
  host_name=`hostname $opts`

  for sys in frontera vista stampede ls6; do
    [[ $host_name =~ $sys ]] && AT_TACC=yes TACC_SYS=$sys
  done
  [[ $AT_TACC != yes ]] && 
     echo " QUEUE ACCESS: System is not configured to block queue access." && exit 0

if [[ $AT_TACC == yes ]]; then
  ACL_DIR=/etc/slurm
  filter_path=$ACL_DIR/tacc_filter_options
  
  # Get the beginning and end (next ^[tacc_filter sentinel) 
  # of the tacc-file/queue_acls/public section
  begin_ln=`grep -n '\[tacc_filter/queue_acls/public\]' $filter_path | sed 's/:.*//'`
  all_ln_nos=(`grep -n '^\[tacc_filter' $filter_path | sed 's/:.*//'` )
  for i in ${all_ln_nos[@]}; do
    [[ $i -gt $begin_ln ]] && end_ln=$i && break
  done

  # if "ALL =" line continue, else warning.  For TEST set USER to blocked user here.
  sed -n "$begin_ln,$end_ln p" $filter_path | grep -E '^\s*ALL\s*=' >/dev/null 2>&1
  if [[ ${PIPESTATUS[1]} == 0 ]]; then

    ACL_LINE=`sed -n "$begin_ln,$end_ln p" $filter_path | grep -E '^\s*ALL\s*='`
    tmp1=${ACL_LINE#*\'}  # remove all up to and include single quote
    tmp2=${tmp1%\'*}        # remove final quote and everything after
    blocked_list=(${tmp2//\!/})        # remove exclamation characters

    reg="\\b$USER\\b"
    if [[ "${blocked_list[@]}" =~ $reg ]]; then

      reg="^#*\s*\\b$USER\\b"  # Begins with one or more (OoM) "#"'s, OoM white spaces and boundary $USER boundry
      message=`grep -E $reg $filter_path`
      status=$?

      [[ $status != 0 ]] && message="No message (reason) for blocking was included in the filter."
      echo " $message"
      exit 1

    else
      [[ $O == T ]] &&
        echo " QUEUE ACCESS:  No Restrictions."
      [[ $O == N ]] &&
        echo " QUEUE ACCESS: Checking block-user filter." &&
        echo " $USER has access to all queues."
      [[ $O == V ]] &&
        echo " QUEUE ACCESS: Checking block-user filter ($filter_path)." &&
        echo " $USER has access to all queues."

    fi 
  else
    echo " QUEUE ACCESS: NO \"ALL =\" line found in public queue ACL file."
    echo " (The should be present and have at least \"root\" included."
    echo " Please submit a ticket to TACC help with this report, thanks!"
    echo " If job submission works, don't consider this a problem."
    STATUS=3
  fi
fi
exit $STATUS

# blocked sample  !! means has message
ALL = '!root !!davidcho !!dkim5'
# message sample
# kent, DISABLED, 2024-10-04, user's OSU benchmarks hiccuped the IB fabric and left 80 nodes drained with IB err    ors via jobs 48351-48353.  <JED>
