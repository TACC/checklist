#!/bin/bash
# Check if module executable/function is available.
# If @TACC Check if TACC module is loaded.
# If @TACC Check if a default compiler system  is available.
#                                 2025-08-01 Kent Milfeld
# TODO If @TACC Check if a default MPI      library is available.
# 
# TODO 1.) Determine module type
# TODO 2.) what about csh (alias module)
# TODO 2.) means identifying login shell

[[ $# != 1 ]] && O=N    #Command line options T=terse,v=Verbose, default Normal
[[ $1 == t ]] && O=T 
[[ $1 == v ]] && O=V 

  host_name=`hostname -A`
  for sys in frontera vista stampede ls6; do
    [[ $host_name =~ $sys ]] && AT_TACC=yes TACC_SYS=$sys
  done

  if [[ $AT_TACC == yes ]]; then
    TACC_compiler_families=( nvidia intel oneAPI llvm gcc )
  fi

  echo "MODULES Access and Loads"

  output=`type module`
  if [[ $? == 0 ]]; then
     cmd=executable
     [[ $output =~ "module is a function" ]] && cmd=function
     [[ $O == V ]] || [[ $O == N ]] &&
     echo " The module $cmd was found."
  else
     echo " No path/type for module command found."
     echo " Check to make system initialization is defining the module function."
     exit 1
  fi

if [[ $AT_TACC == yes ]]; then

  output=`ml is-loaded TACC`
  if [[ $? == 0 ]]; then
    [[ $O == V ]] || [[ $O == N ]] &&
    printf " %-7s module is loaded.\n"  "TACC"
    T_string="TACC module loaded. " 
  else
    echo " TACC module is NOT loaded-- a requirement for TACC environments."
    exit 1
  fi
  
  type=no_default
  output=$(module describe 2>&1)
  if [[ "$output" =~ "Collection \"default\" contains:" ]]; then

    for comp in ${TACC_compiler_families[@]}; do   #( nvidia intel oneAPI llvm gcc)
      reg="\\b${comp}\\b"
      [[ $output =~ $reg  ]] &&  compilers+=($comp) #&& echo FOUND $comp -- ${compilers[@]}
    done

    if [[ ${#compilers[@]} ==  1 ]]; then
      type=has_default
      [[ $O == V ]] || [[ $O == N ]] &&
      printf " %-7s compiler module is in the default module group and is loaded.\n" ${compilers[0]}
      T_string="$T_string Module ${compilers[0]} is the default compiler module."
    fi
    [[ ${#compilers[@]} ==  0 ]] && echo " No compiler found in default system system module." &&  exit 1
    [[ ${#compilers[@]} -gt 1 ]] && echo " More than 1 compiler system found in the default module." && 
                                      echo " Only a single compiler system can be loaded in a module env." &&
                                      exit 1
  fi
  
  if [[ $type != has_default ]]; then
    for comp in ${TACC_compiler_families[@]}; do   #( nvidia intel oneAPI llvm gcc)
      module is-loaded $comp #>/dev/null 2>&1 
      [[ $? == 0 ]] &&  loaded_compilers+=($comp)
    done
  
    if [[ $O == V ]] || [[ $O == N ]]; then
      [[ ${#loaded_compilers[@]} ==  1 ]] && printf " %-7s module is the loaded compiler system.\n" \
                                           ${loaded_compilers[0]}
    fi
    [[   ${#loaded_compilers[@]} ==  0 ]] && echo " No loaded compiler system found." &&  exit 1
    [[   ${#loaded_compilers[@]} -gt 1 ]] && echo " More than 1 compiler system found in the loaded module." && 
                                          echo " Only a single compiler system can be loaded in a module env." &&
                                          exit 1
  fi
  [[ $O == T ]] &&
     echo " $T_string"

fi
exit 0

#  TACC_compiler_families=( nvidia intel oneAPI llvm gcc)
#vista $ ml describe
#Collection "default" contains: 
#   1) nvidia    2) nvpl    3) ucc    4) ucx    5) openmpi    6) cmake    7) xalt    8) TACC
