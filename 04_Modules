#!/bin/bash
# Check if module executable/function is available.
# If @TACC Check if TACC module is loaded.
# If @TACC Check if a default compiler system  is available.
#                                 2025-08-01 Kent Milfeld
# TODO If @TACC Check if a default MPI      library is available.
# 
# TODO 1.) Determine module type
# TODO 2.) what about csh (alias module)
# TODO 2.) means identifying login shell

  [[ $# == 0 ]] && O=N    #Command line options T=terse,v=Verbose, default Normal
  [[ $1 =~ t ]] && O=T 
  [[ $1 =~ v ]] && O=V 
  [[ ! "$O" =~ [NTV] ]] && echo "USAGE: $0 [-t|-v] # terse|verbose output"

  STATUS=0

  host_name=`hostname -A`
  for sys in frontera vista stampede ls6; do
    [[ $host_name =~ $sys ]] && AT_TACC=yes TACC_SYS=$sys
  done

  if [[ $AT_TACC == yes ]]; then
    TACC_compiler_families=( nvidia intel oneAPI llvm gcc )
  fi

  output=`type module 2>/dev/null`
  if [[ $? == 0 ]]; then
     cmd=executable
     [[ $output =~ "module is a function" ]] && cmd=function
  else
     echo "No executable or function for module found."
     echo "Make sure system startup scripts are defining/setting path for \"module\"."
     exit 1
  fi

  type sbatch   >& /dev/null; [[ $? == 0 ]] && batch_sched+=(SLURM         )
  type qsub     >& /dev/null; [[ $? == 0 ]] && batch_sched+=(PBS_TORQUE_SGE)
  type bsub     >& /dev/null; [[ $? == 0 ]] && batch_sched+=(LSF           )
  type llsubmit >& /dev/null; [[ $? == 0 ]] && batch_sched+=(LOADLEVELER   )

  if [[ ${#batch_sched[@]} == 0 ]]; then
    echo "NO BATCH SUBMISSION COMMAND FOUND (searched: sbatch, qsub, bsub, llsubmit)"
    echo "Make LMOD or MODULES is installed and/or Batch System module is loaded."
    exit 1
  else
    [[ $O == N ]] || [[ $O == V ]] && echo "MODULES: Environment Managed by ${batch_sched[@]}."
    [[ $O == V ]] && echo "The module $cmd was found."
  fi


if [[ $AT_TACC == yes ]]; then

  output=`ml is-loaded TACC`
  if [[ $? == 0 ]]; then
    [[ $O == V ]] && printf "%-7s module is loaded.\n"  "TACC"
    TACC_mod="TACC" 
  else
    echo "TACC module is NOT loaded-- a requirement for TACC environments."
    echo "If you have reset your own modules, ignore; otherwise submit a ticket."
    STATUS=1
  fi
  
  type=no_default
  output=$(module describe 2>&1)
  if [[ "$output" =~ "Collection \"default\" contains:" ]]; then

    for comp in ${TACC_compiler_families[@]}; do   #( nvidia intel oneAPI llvm gcc)
      reg="\\b${comp}\\b"
      [[ $output =~ $reg  ]] &&  compilers+=($comp) #&& echo FOUND $comp -- ${compilers[@]}
    done

    if [[ ${#compilers[@]} ==  1 ]]; then
      type=has_default
      [[ $O == V ]] &&
        printf "%-7s compiler module is in the default module group and is loaded.\n" ${compilers[0]}
      [[ $O == N ]] &&
        printf "$TACC_mod${TACC_mod:+ and }%-7s compiler loaded in default module group.\n" ${compilers[0]}
    fi

    [[ ${#compilers[@]} ==  0 ]] && echo "No compiler found in default system system module." &&  exit 1
    [[ ${#compilers[@]} -gt 1 ]] && echo "More than 1 compiler system found in the default module." && 
                                      echo "Only a single compiler system can be loaded in a module env." &&
                                      exit 1
    T_string="$TACC_mod${TACC_mod:+ and }${compilers[0]} Loaded."
  fi
  
  if [[ $type != has_default ]]; then
    for comp in ${TACC_compiler_families[@]}; do   #( nvidia intel oneAPI llvm gcc)
      module is-loaded $comp #>/dev/null 2>&1 
      [[ $? == 0 ]] &&  loaded_compilers+=($comp)
    done
  
    if [[ ${#loaded_compilers[@]} ==  1 ]]; then
      [[ $O == V ]] &&
        printf "%-7s module is the loaded compiler system.\n"  ${loaded_compilers[0]}
      [[ $O == N ]] &&
        printf "$TACC_mod${TACC_mod:+ and }%-7s module(s) loaded.\n" ${loaded_compilers[0]}
    fi

    [[   ${#loaded_compilers[@]} ==  0 ]] && echo "No loaded compiler system found." &&  exit 1
    [[   ${#loaded_compilers[@]} -gt 1 ]] && echo "More than 1 compiler system found in the loaded module." && 
                                          echo "Only a single compiler system can be loaded in a module env." &&
                                          exit 1
    T_string="$TACC_mod${TACC_mod:+ and }${loaded_compilers[0]} Loaded."
  fi

  [[ $O == T ]] &&
     echo "MODULES: $T_string"

fi
exit $STATUS

#  TACC_compiler_families=( nvidia intel oneAPI llvm gcc)
#vista $ ml describe
#Collection "default" contains: 
#   1) nvidia    2) nvpl    3) ucc    4) ucx    5) openmpi    6) cmake    7) xalt    8) TACC
