#!/bin/bash

#TODO:
# determine what the scheduler
# show queues, and determine status  (si with status)

[[ $# != 1 ]] && O=N    #Command line options T=terse,v=Verbose, default Normal
[[ $1 == t ]] && O=T 
[[ $1 == v ]] && O=V 

type sbatch >& /dev/null
[[ $? == 0 ]] && batch_sched+=(SLURM         ) && sched_cmds=(sbatch scancel squeue)
type qsub >& /dev/null
[[ $? == 0 ]] && batch_sched+=(PBS_TORQUE_SGE) && sched_cmds=(qsub qdel qstat)
type bsub >& /dev/null
[[ $? == 0 ]] && batch_sched+=(LSF           ) && sched_cmds=(bsub bkill bjobs)
type llsubmit >& /dev/null
[[ $? == 0 ]] && batch_sched+=(LOADLEVELER   ) && sched_cmds=(llsubmit llcancel llq)

#batch_sched=()
if [[ ${#batch_sched[@]} == 0 ]]; then
   echo "No BATCH MANAGER FOUND. Checked for: "
   echo " Checked for SLURM,  PBS_TORQUE_SGE, LSF  and LOADLEVER with commands:"
   echo "             sbatch, qsub,           bsub,    llsubmit, respectively."
   exit 1
elif [[ ${#batch_sched[@]} == 1 ]]; then
   echo "BATCH manager is ${batch_sched[0]}"
fi

#host_name=`hostname -A`
#for sys in frontera vista stampede ls6; do
#  [[ $host_name =~ $sys ]] && AT_TACC=yes TACC_SYS=$sys
#done

#if [[ $AT_TACC == yes ]]; then
#  sched_cmds=(sbatch squeue scancel)
#  [[ $TACC_SYS == ls4 ]] && sched_cmds=(qsub qstat qdel)
#else
#  sched_cmds=(qsub qstat qdel)
#fi

for sched_cmd in ${sched_cmds[@]}; do
  output=`type $sched_cmd`
  if [[ $? == 0 ]]; then 
    found_cmds+=($sched_cmd)
  else
    not_found_cmds+=($sched_cmd)
  fi
done

if [[ ${#sched_cmds[@]} -eq ${#found_cmds[@]} ]]; then
   echo " All BATCH scheduler command(s) found: ${found_cmds[@]}"
else
   echo " Only found BATCH scheduler command(s): ${found_cmds[@]}"
   echo " Could not find the BATCH command(s): ${not_found_cmds[@]}"
   exit 1
fi


#q_status=(`sinfo --noheader -o "%20P %5a"`)
q_status=`sinfo --noheader -o "   %10P %5a"`
queue_count=`sinfo --noheader -o "   %10P %5a" | wc -l`
up_count=`echo $q_status | grep -o up | wc -l`

echo " PARTITION  AVAILABILITY"
echo "$q_status"

[[ $up_count == 0 ]]            && echo " ALL QUEUES ARE NOT up"  && exit 1
[[ $up_count != $queue_count ]] && echo " NOT ALL QUEUES ARE up." && exit 3

exit 0
